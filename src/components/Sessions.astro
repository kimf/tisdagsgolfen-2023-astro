---
import { getActiveSessions } from '../utils/getActiveSessions';

const sessions = await getActiveSessions();
let userId: string | null = null;
if (Astro.cookies.has('sb-user-id')) {
  userId = Astro.cookies.get('sb-user-id')?.value || null;
}

const ownedScoringSession = userId
  ? sessions?.data?.find((sesh) => sesh.owner_id === userId)
  : null;
const hasFinishedSession = ownedScoringSession && ownedScoringSession.state === 'PENDING';
const scoringSession = ownedScoringSession || (sessions && sessions.data ? sessions.data[0] : null);
---

<div
  style={{
    width: '100%',
    backgroundColor: scoringSession ? '#feb' : '#e2e5e7',
    padding: '12px',
  }}>
  {
    scoringSession ? (
      <>
        <h5 style={{ margin: 0, marginbottom: 4 }}>AKTIV RUNDA</h5>
        <div style={{ display: 'flex', flexDirection: 'row' }}>
          {scoringSession.course?.name.toUpperCase()}

          <div style={{ marginLeft: 'auto', flexDirection: 'row', display: 'flex', gap: '12px' }}>
            <a href={`/leaderboard/${scoringSession.id}`}>
              <div style={{ flexDirection: 'row', justifyContent: 'space-between' }}>
                LEDARTAVLA
              </div>
            </a>
            <a
              href={
                !ownedScoringSession
                  ? '/sessions/new?id=' + scoringSession.id
                  : `/scoring/${ownedScoringSession.id}`
              }>
              {hasFinishedSession ? 'REDIGERA' : ownedScoringSession ? 'FORTSÃ„TT' : 'SPELA'}
            </a>
          </div>
        </div>
      </>
    ) : (
      <a href="/sessions/new">STARTA NY RUNDA</a>
    )
  }
</div>
