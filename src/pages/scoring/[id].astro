---
import { eq } from 'drizzle-orm';
import Layout from 'src/layouts/Layout.astro';
import { db } from 'src/db';
import scoringSessions from 'src/db/schema/session';
import courses from 'src/db/schema/course';
import ScoringCard from 'src/components/homepage/ScoringCard.astro';

export const prerender = false;

interface PageData {
  title: string;
  courseName: string;
  sessionId: number;
}

// Get URL parameters and check authentication
const { id } = Astro.params;
const userId = Astro.cookies.get('activeUserId');

if (!userId?.value || !id) {
  return Astro.redirect('/login');
}

let pageData: PageData | undefined;

try {
  // Validate session ID
  const sessionId = parseInt(id);
  if (isNaN(sessionId)) {
    return Astro.redirect('/');
  }

  // Get the session data
  const sessionData = await db
    .select()
    .from(scoringSessions)
    .where(eq(scoringSessions.id, sessionId))
    .limit(1);

  if (sessionData.length === 0 || sessionData[0].ownerId !== userId.value) {
    return Astro.redirect('/');
  }

  const session = sessionData[0];

  // Get course data
  const courseData = await db
    .select()
    .from(courses)
    .where(eq(courses.id, session.courseId))
    .limit(1);

  if (courseData.length === 0) {
    throw new Error('Course not found');
  }

  const course = courseData[0];

  pageData = {
    title: `Scoring - ${course.name}`,
    courseName: course.name,
    sessionId
  };
} catch (error) {
  console.error('Error loading scoring session:', error);
  return Astro.redirect('/');
}

if (!pageData) {
  return Astro.redirect('/');
}
---

<Layout title={pageData.title}>
  <h1>{pageData.courseName}</h1>
  <a href="/">Back to Home</a>

  <ScoringCard sessionId={pageData.sessionId} />
</Layout>
